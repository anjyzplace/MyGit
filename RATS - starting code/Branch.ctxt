#BlueJ class context
comment0.params=location
comment0.target=Branch(java.lang.String)
comment1.params=
comment1.target=java.lang.String\ getBranch()
comment1.text=Returns\ the\ location\ of\ the\ branch\ as\ a\ String\r\n\ @return\ the\ location\ of\ the\ branch\ as\ a\ String\r\n
comment10.params=
comment10.target=java.lang.String\ getAllStaff()
comment10.text=\ Returns\ a\ String\ representation\ of\ all\ the\ staffs\ \ \r\n\ @return\ returns\ a\ String\ representation\ of\ all\ staffs\ \r\n
comment11.params=custID\ name
comment11.target=void\ addCustomer(int,\ java.lang.String)
<<<<<<< HEAD
comment11.text=\r\n\ *\ Add\ Customer\ with\ Constructor\ 1\r\n\ **\r\n\ ***\r\n
comment12.params=custID\ name\ creditLimit
comment12.target=void\ addCustomer(int,\ java.lang.String,\ int)
comment12.text=\r\n\ *\ Add\ Customer\ with\ credit\ Limit\ constructor\r\n\ **\r\n\ ***\r\n
comment13.params=cust\ onSite\ sHand\ lang
comment13.target=java.lang.String\ addJob(java.lang.String,\ boolean,\ boolean,\ java.lang.String)
comment13.text=\ Finds\ the\ customer\ and\ if\ the\ customer\ is\ not\ in\ the\ system,\r\n\ \ adds\ the\ customer.If\ the\ customer\ is\ over\ their\ credit\ limit,\ \r\n\ \ "Customer\ over\ credit\ limit\ is\ returned\ and\ the\ job\ is\ not\ \r\n\ \ accepted.If\ the\ job\ is\ accepted\ it\ gets\ a\ number\ sequentially\ \r\n\ \ from\ 100.If\ a\ suitable\ staff\ member\ is\ available,the\ state\ of\ \r\n\ \ the\ job\ is\ set\ to\ "on\ going",the\ selected\ staff\ member\ is\ added\r\n\ \ to\ the\ job\ and\ the\ staff's\ set\ to\ "on\ job".If\ a\ staff\ member\ is\r\n\ \ not\ available,the\ job's\ state\ is\ state\ is\ set\ to\ "waiting".If\ \r\n\ \ suitable\ staff\ cannot\ be\ found,"Job\ waiting"\ is\ returned,\ else\r\n\ \ "Staff\ allocated\:"\ together\ with\ the\ staff\ details.\r\n\ @param\ cust\ is\ the\ name\ of\ the\ customer\r\n\ @param\ onSite\ true\ if\ job\ is\ on\ customer's\ site,\ false\ if\ \r\n\ \ \ \ \ \ required\ to\ work\ at\ home\r\n\ @param\ sHand\ true\ if\ shorthand\ is\ required,\ false\ otherwise\r\n\ @param\ lang\ should\ the\ "English"\ if\ no\ translation\ required,\ \r\n\ \ \ \ \ \ otherwise\ the\ name\ of\ the\ language\r\n\ @return\ returns"Customer\ over\ credit\ limit",\ or\ if\ the\ job\ is\ \r\n\ possible,the\ job\ number\ with\ either\ "Job\ waiting"\ if\ no\ staff\ is\r\n\ available,\ or\ "staff\ allocated\:"\ together\ with\ the\ staff\ details\r\n
comment14.params=
comment14.target=java.lang.String\ getAllJobs()
comment14.text=\r\n\ \ Display\ all\ jobs\r\n
comment15.params=
comment15.target=java.lang.String\ getJobsWaiting()
comment16.params=jNo
comment16.target=double\ getJobCost(int)
comment16.text=\r\n\ Check\ the\ cost\ of\ a\ job\r\n\ @Param\ JobID\r\n\ @Return\ Double\ value\ of\ Job\ Cost\r\n\ \r\n
comment17.params=jNo\ hours
comment17.target=int\ setJobDone(int,\ int)
comment17.text=\r\n\ Set\ Job\ as\ done\r\n\ @Param\ job\ ID\r\n\ @Param\ hours\r\n\ @return\ 0\ or\ -1\r\n
comment18.params=
comment18.target=int\ checkJobsWaiting()
comment18.text=\r\n\ Checks\ the\ list\ of\ jobs\ and\ reurns\ the\ job\ number\ of\ the\ fist\ job\ for\ whicha\ \ staff\ member\ is\ now\ avaialble.\r\n\ If\ such\ a\ job\ is\ found\ the\ state\ of\ the\ job\ is\ set\ to\ on-going,\ the\ selected\ staff\ is\ added\ to\ the\ job\ information\r\n\ and\ the\ staff's\ state\ is\ set\ to\ on\ job.\r\n\ @return\ int\ 0\r\n\ \r\n\r\n
comment19.params=cust
comment19.target=java.lang.String\ newsearch(java.lang.String)
comment19.text=\r\n\ Search\ for\ Customer\ using\ \r\n\ @param\ String\ Cust\ \=\ Customer\ Name\r\n\ @Return\ "Found"\ or\ "Not\ Found"\r\n\ \ @Exception\ \ NoSuchElementException\ is\ captured\ if\ Customer\ is\ not\ found.\r\n
comment2.params=
comment2.target=java.lang.String\ toString()
comment2.text=Returns\ a\ String\ representation\ of\ the\ branch,including\r\n\ its\ location\ and\ all\ its\ staff,customers\ and\ jobs\r\n\ @return\ a\ String\ representation\ of\ the\ branch,including\r\n\ its\ location\ and\ all\ its\ staff,customers\ and\ jobs\r\n
comment20.params=cust
comment20.target=java.lang.String\ isRegular(java.lang.String)
comment20.text=\r\n\ Search\ if\ Customer\ is\ Regular\r\n\ @param\ String\ Cust\ \=\ Customer\ Name\r\n\ @Return\ "Regular"\ or\ "Not\ Regular"\r\n\ @Exception\ \ NoSuchElementException\ is\ captured\ if\ Customer\ is\ not\ found.\r\n
comment21.params=custID
comment21.target=void\ toRegular(int)
comment21.text=\r\n\ Convert\ Customer\ to\ Regular\ Customer\r\n\ \r\n\ \r\n
comment22.params=cust
comment22.target=java.lang.String\ isWithinLimit(java.lang.String)
comment22.text=\r\n\ Method\ to\ Check\ it\ customer\ is\ within\ Limit\r\n\ \r\n\ \r\n
comment23.params=
comment23.target=java.lang.String\ nextAvaialbleStaff()
comment23.text=\r\n\ Get\ next\ avaialble\ staff\r\n
=======
comment12.params=custID\ name\ creditLimit
comment12.target=void\ addCustomer(int,\ java.lang.String,\ int)
comment13.params=custID
comment13.target=java.lang.Boolean\ isWithinCreditLimit(java.lang.String)
comment14.params=cust\ onSite\ sHand\ lang
comment14.target=java.lang.String\ addJob(java.lang.String,\ boolean,\ boolean,\ java.lang.String)
comment15.params=
comment15.target=java.lang.String\ getAllJobs()
comment16.params=
comment16.target=java.lang.String\ getJobsWaiting()
comment17.params=jNo
comment17.target=double\ getJobCost(int)
comment18.params=jNo\ hours
comment18.target=int\ setJobDone(int,\ int)
comment19.params=
comment19.target=int\ checkJobsWaiting()
comment2.params=
comment2.target=java.lang.String\ toString()
comment20.params=
comment20.target=void\ showAllStaff()
comment20.text=\r\n\ Iterate\ through\ the\ HashMap\ of\ Staff\r\n\ \r\n\ \r\n
comment21.params=
comment21.target=void\ showLimitAllCustomers()
comment22.params=jobID\ staffId
comment22.target=void\ assignJobToStaff(int,\ java.lang.String)
comment22.text=\r\n\ Assign\ job\ to\ Staff\r\n
>>>>>>> origin/master
comment3.params=
comment3.target=java.lang.String\ getAllCustomers()
comment3.text=Returns\ a\ String\ representation\ of\ customers\ who\ have\ used\ the\ \r\n\ branch's\ services\r\n\ @return\ a\ String\ representation\ of\ the\ customers\ who\ have\ used\ \r\n\ the\ branch's\ services\ \r\n
comment4.params=id\ name
comment4.target=void\ addStaff(java.lang.String,\ java.lang.String)
comment4.text=\ Allows\ a\ clerk\ to\ be\ added\ to\ the\ branch.The\ clerk's\ availability\r\n\ \ is\ set\ to\ "available"\r\n\ @param\ id\ represents\ the\ employee\ code\ of\ the\ staff\ e.g\ TY333\r\n\ @param\ name\ is\ the\ staff\ member's\ name\ \r\n
comment5.params=id\ name\ hOnly\ sHand
comment5.target=void\ addStaff(java.lang.String,\ java.lang.String,\ boolean,\ boolean)
comment5.text=Allows\ a\ typist\ to\ be\ added\ to\ a\ branch.The\ typist's\ availability\r\n\ \ is\ set\ to\ "available".Staff\ must\ specify\ if\ they\ can\ only\ work\ at\ \r\n\ \ home.If\ false,\ then\ staff\ can\ work\ on\ site\ or\ at\ home\ if\ required\r\n\ @param\ id\ represents\ the\ employee\ code\ of\ the\ staff\ e.g\ TY333\r\n\ @param\ name\ is\ the\ staff\ member's\ name\ \r\n\ @param\ hOnly\ true\ if\ a\ member\ of\ staff\ can\ only\ work\ at\ home,\r\n\ fals\ if\ they\ can\ only\ work\ at\ home\r\n\ @param\ sHand\ true\ if\ a\ member\ of\ staff\ can\ offer\ shorthand\r\n
comment6.params=id\ name\ hOnly\ sHand\ lang\ rate
comment6.target=void\ addStaff(java.lang.String,\ java.lang.String,\ boolean,\ boolean,\ java.lang.String,\ double)
comment6.text=\ Allows\ a\ translator\ to\ be\ added\ to\ the\ branch.The\ translator's\ \r\n\ \ availability\ is\ set\ to\ "available".Staff\ must\ specify\ if\ they\ \r\n\ \ can\ only\ work\ at\ home.If\ false,\ then\ staff\ can\ work\ on\ site\ or\ \r\n\ \ at\ home\ if\ required.\r\n\ @param\ id\ represents\ the\ employee\ code\ of\ the\ staff\ e.g\ TY333\r\n\ @param\ name\ is\ the\ staff\ member's\ name\ \r\n\ @param\ hOnly\ true\ if\ a\ member\ of\ staff\ can\ work\ on\ site,\ false\ \r\n\ if\ they\ can\ only\ work\ at\ home\r\n\ @param\ sHand\ true\ if\ a\ member\ of\ staff\ can\ offer\ shorthand\r\n\ @param\ lang\ is\ the\ language\ which\ the\ staff\ member\ can\ translate\r\n\ @param\ rate\ is\ the\ hourly\ rate\r\n
comment7.params=id\ email
comment7.target=void\ setEmail(java.lang.String,\ java.lang.String)
comment7.text=\ Sets\ email\ for\ a\ typist\r\n\ @param\ id\ represents\ the\ staff\ id\r\n\ @param\ email\ is\ the\ email\ address\r\n
comment8.params=stfId
comment8.target=boolean\ isStaff(java.lang.String)
comment8.text=\ Returns\ true\ if\ the\ staff\ with\ the\ staff\ identifier\ \r\n\ can\ be\ found\ in\ the\ system,\ false\ otherwise.\r\n\ @param\ stfId\ represents\ the\ staff\ identifier\ \r\n\ @return\ returns\ true\ if\ the\ staff\ with\ the\ staff\ identifier\ \r\n\ can\ be\ found,\ false\ otherwise.\r\n
comment9.params=depId
comment9.target=void\ removeStaff(java.lang.String)
<<<<<<< HEAD
comment9.text=\ Removes\ a\ staff\ from\ the\ branch.\r\n\ pre-condition\:\ isStaff(depId)\r\n\ @param\ stfId\ represents\ the\ staff\ identifier\ \r\n
numComments=24
=======
numComments=23
>>>>>>> origin/master
