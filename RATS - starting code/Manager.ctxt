#BlueJ class context
comment0.params=
comment0.target=java.lang.String\ getBranch()
comment0.text=Returns\ the\ location\ of\ the\ branch\ as\ a\ String\r\n\ @return\ the\ location\ of\ the\ branch\ as\ a\ String\r\n
comment1.params=
comment1.target=java.lang.String\ toString()
comment1.text=Returns\ a\ String\ representation\ of\ the\ branch,including\r\n\ its\ location\ and\ all\ its\ staff,customers\ and\ jobs\r\n\ @return\ a\ String\ representation\ of\ the\ branch,including\r\n\ its\ location\ and\ all\ its\ staff,customers\ and\ jobs\r\n
comment10.params=cust\ onSite\ sHand\ lang
comment10.target=java.lang.String\ addJob(java.lang.String,\ boolean,\ boolean,\ java.lang.String)
comment10.text=\ Finds\ the\ customer\ and\ if\ the\ customer\ is\ not\ in\ the\ system,\r\n\ \ adds\ the\ customer.If\ the\ customer\ is\ over\ their\ credit\ limit,\ \r\n\ \ "Customer\ over\ credit\ limit\ is\ returned\ and\ the\ job\ is\ not\ \r\n\ \ accepted.If\ the\ job\ is\ accepted\ it\ gets\ a\ number\ sequentially\ \r\n\ \ from\ 100.If\ a\ suitable\ staff\ member\ is\ available,the\ state\ of\ \r\n\ \ the\ job\ is\ set\ to\ "on\ going",the\ selected\ staff\ member\ is\ added\r\n\ \ to\ the\ job\ and\ the\ staff's\ set\ to\ "on\ job".If\ a\ staff\ member\ is\r\n\ \ not\ available,the\ job's\ state\ is\ state\ is\ set\ to\ "waiting".If\ \r\n\ \ suitable\ staff\ cannot\ be\ found,"Job\ waiting"\ is\ returned,\ else\r\n\ \ "Staff\ allocated\:"\ together\ with\ the\ staff\ details.\r\n\ @param\ cust\ is\ the\ name\ of\ the\ customer\r\n\ @param\ onSite\ true\ if\ job\ is\ on\ customer's\ site,\ false\ if\ \r\n\ \ \ \ \ \ required\ to\ work\ at\ home\r\n\ @param\ sHand\ true\ if\ shorthand\ is\ required,\ false\ otherwise\r\n\ @param\ lang\ should\ the\ "English"\ if\ no\ translation\ required,\ \r\n\ \ \ \ \ \ otherwise\ the\ name\ of\ the\ language\r\n\ @return\ returns"Customer\ over\ credit\ limit",\ or\ if\ the\ job\ is\ \r\n\ possible,the\ job\ number\ with\ either\ "Job\ waiting"\ if\ no\ staff\ is\r\n\ available,\ or\ "staff\ allocated\:"\ together\ with\ the\ staff\ details\r\n
comment11.params=
comment11.target=java.lang.String\ getAllJobs()
comment11.text=\ Provides\ a\ String\ representation\ of\ all\ jobs\ \r\n\ @return\ returns\ a\ String\ representation\ of\ of\ all\ jobs\r\n
comment12.params=
comment12.target=java.lang.String\ getJobsWaiting()
comment12.text=\ Provides\ a\ String\ representation\ of\ all\ jobs\ which\ are\ \r\n\ still\ waiting\ to\ be\ done\r\n\ @return\ returns\ a\ String\ representation\ of\ all\ jobs\ which\ are\ \r\n\ still\ waiting\ to\ be\ doneg\r\n
comment13.params=jNo
comment13.target=double\ getJobCost(int)
comment13.text=\ Returns\ the\ cost\ of\ job\ specified\ by\ the\ parameter\ value\ once\ it\r\n\ has\ been\ done.If\ the\ job\ cannot\ be\ found\ or\ the\ job\ has\ not\ been\ \r\n\ done\ return\ -1.Clerks\ are\ paid\ \u00A38\ per\ hour,\ typists\ \u00A312\ per\ hour,\ \r\n\ while\ translators\ specify\ their\ own\ hourly\ rate.A\ job\ which\ \r\n\ requires\ shorthand\ has\ an\ added\ standard\ fee\ of\ \u00A320.Cost\ of\ the\ \r\n\ job\ is\ added\ to\ the\ wages\ of\ the\ staff\ member\ and\ this\ cost\ \r\n\ together\ with\ a\ standard\ charge\ (currently\ \u00A325)\ is\ added\ to\ the\ \r\n\ money\ owed\ by\ the\ customer.\r\n\ @param\ jobNo\ is\ the\ number\ of\ the\ job\r\n\ @return\ the\ cost\ of\ a\ job\ calculated\ as\ described\ above\r\n
comment14.params=jNo\ hours
comment14.target=int\ setJobDone(int,\ int)
comment14.text=\ Records\ that\ the\ job\ specified\ by\ the\ parameter\ value\ has\ been\ \r\n\ done.If\ the\ job\ can\ be\ found\ and\ its\ state\ is\ "on\ going",\ sets\ \r\n\ the\ state\ of\ the\ job\ to\ "done",\ the\ state\ of\ its\ staff\ to\ \r\n\ "available",\ costs\ are\ calculated\ and\ added\ as\ appropriate,and\ 0\ \r\n\ is\ returned,otherwise\ return\ -1\r\n\ @param\ jNO\ is\ the\ job\ number\r\n\ @param\ hours\ is\ the\ number\ of\ hours\ taken\ to\ do\ the\ job\r\n\ @return\ -1\ if\ job\ is\ not\ found\ or\ is\ not\ "on\ going",\ else\ 0\r\n
comment15.params=
comment15.target=int\ checkJobsWaiting()
comment15.text=\ Checks\ the\ list\ of\ jobs\ and\ returns\ the\ job\ number\ of\ the\ first\r\n\ job\ for\ which\ a\ staff\ member\ is\ now\ available.If\ such\ a\ job\ is\ \r\n\ found,\ the\ state\ of\ the\ job\ is\ set\ to\ "on\ going",\ the\ selected\ \r\n\ staff\ is\ added\ to\ the\ job\ information\ and\ the\ staff's\ state\ is\ \r\n\ set\ to\ "on\ job"and\ the\ job\ number\ is\ returned.\ If\ there\ no\ such\r\n\ jobs,return\ -1\r\n\ @return\ number\ of\ the\ job\ which\ can\ now\ be\ done\r\n
comment2.params=
comment2.target=java.lang.String\ getAllCustomers()
comment2.text=Returns\ a\ String\ representation\ of\ customers\ who\ have\ used\ the\ \r\n\ branch's\ services\r\n\ @return\ a\ String\ representation\ of\ the\ customers\ who\ have\ used\ \r\n\ the\ branch's\ services\ \r\n
comment3.params=id\ name
comment3.target=void\ addStaff(java.lang.String,\ java.lang.String)
comment3.text=\ Allows\ a\ clerk\ to\ be\ added\ to\ the\ branch.The\ clerk's\ availability\r\n\ \ is\ set\ to\ "available"\r\n\ @param\ id\ represents\ the\ employee\ code\ of\ the\ staff\ e.g\ TY333\r\n\ @param\ name\ is\ the\ staff\ member's\ name\ \r\n
comment4.params=id\ name\ hOnly\ sHand
comment4.target=void\ addStaff(java.lang.String,\ java.lang.String,\ boolean,\ boolean)
comment4.text=Allows\ a\ typist\ to\ be\ added\ to\ a\ branch.The\ typist's\ availability\r\n\ \ is\ set\ to\ "available".Staff\ must\ specify\ if\ they\ can\ only\ work\ at\ \r\n\ \ home.If\ false,\ then\ staff\ can\ work\ on\ site\ or\ at\ home\ if\ required\r\n\ @param\ id\ represents\ the\ employee\ code\ of\ the\ staff\ e.g\ TY333\r\n\ @param\ name\ is\ the\ staff\ member's\ name\ \r\n\ @param\ hOnly\ true\ if\ a\ member\ of\ staff\ can\ only\ work\ at\ home,\r\n\ fals\ if\ they\ can\ only\ work\ at\ home\r\n\ @param\ sHand\ true\ if\ a\ member\ of\ staff\ can\ offer\ shorthand\r\n
comment5.params=id\ name\ hOnly\ sHand\ lang\ rate
comment5.target=void\ addStaff(java.lang.String,\ java.lang.String,\ boolean,\ boolean,\ java.lang.String,\ double)
comment5.text=\ Allows\ a\ translator\ to\ be\ added\ to\ the\ branch.The\ translator's\ \r\n\ \ availability\ is\ set\ to\ "available".Staff\ must\ specify\ if\ they\ \r\n\ \ can\ only\ work\ at\ home.If\ false,\ then\ staff\ can\ work\ on\ site\ or\ \r\n\ \ at\ home\ if\ required.\r\n\ @param\ id\ represents\ the\ employee\ code\ of\ the\ staff\ e.g\ TY333\r\n\ @param\ name\ is\ the\ staff\ member's\ name\ \r\n\ @param\ hOnly\ true\ if\ a\ member\ of\ staff\ can\ work\ on\ site,\ false\ \r\n\ if\ they\ can\ only\ work\ at\ home\r\n\ @param\ sHand\ true\ if\ a\ member\ of\ staff\ can\ offer\ shorthand\r\n\ @param\ lang\ is\ the\ language\ which\ the\ staff\ member\ can\ translate\r\n\ @param\ rate\ is\ the\ hourly\ rate\r\n
comment6.params=id\ email
comment6.target=void\ setEmail(java.lang.String,\ java.lang.String)
comment6.text=\ Sets\ email\ for\ a\ typist\r\n\ @param\ id\ represents\ the\ staff\ id\r\n\ @param\ email\ is\ the\ email\ address\r\n
comment7.params=stfId
comment7.target=boolean\ isStaff(java.lang.String)
comment7.text=\ Returns\ true\ if\ the\ staff\ with\ the\ staff\ identifier\ \r\n\ can\ be\ found\ in\ the\ system,\ false\ otherwise.\r\n\ @param\ stfId\ represents\ the\ staff\ identifier\ \r\n\ @return\ returns\ true\ if\ the\ staff\ with\ the\ staff\ identifier\ \r\n\ can\ be\ found,\ false\ otherwise.\r\n
comment8.params=depId
comment8.target=void\ removeStaff(java.lang.String)
comment8.text=\ Removes\ a\ staff\ from\ the\ branch.\r\n\ pre-condition\:\ isStaff(depId)\r\n\ @param\ stfId\ represents\ the\ staff\ identifier\ \r\n
comment9.params=
comment9.target=java.lang.String\ getAllStaff()
comment9.text=\ Returns\ a\ String\ representation\ of\ all\ the\ staffs\ \ \r\n\ @return\ returns\ a\ String\ representation\ of\ all\ staffs\ \r\n
numComments=16
